1644527250
AwuilbDvXz%3A4ccbb8ba9eea1934ec0eef0564bf0fdf-45f3e4b53dd5000fd2a703668e89330f
s:23868:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"45f3e4b53dd5000fd2a703668e89330f";s:39:" phpDocumentor\Reflection\Php\File name";s:14:"Statements.php";s:39:" phpDocumentor\Reflection\Php\File path";s:97:"src/vendor/google/apiclient-services/src/Google/Service/Digitalassetlinks/Resource/Statements.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5311:"<?php
/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

/**
 * The "statements" collection of methods.
 * Typical usage is:
 *  <code>
 *   $digitalassetlinksService = new Google_Service_Digitalassetlinks(...);
 *   $statements = $digitalassetlinksService->statements;
 *  </code>
 */
class Google_Service_Digitalassetlinks_Resource_Statements extends Google_Service_Resource
{
  /**
   * Retrieves a list of all statements from a given source that match the
   * specified target and statement string. The API guarantees that all statements
   * with secure source assets, such as HTTPS websites or Android apps, have been
   * made in a secure way by the owner of those assets, as described in the
   * [Digital Asset Links technical design
   * specification](https://github.com/google/digitalassetlinks/blob/master/well-
   * known/details.md). Specifically, you should consider that for insecure
   * websites (that is, where the URL starts with `http://` instead of
   * `https://`), this guarantee cannot be made. The `List` command is most useful
   * in cases where the API client wants to know all the ways in which two assets
   * are related, or enumerate all the relationships from a particular source
   * asset. Example: a feature that helps users navigate to related items. When a
   * mobile app is running on a device, the feature would make it easy to navigate
   * to the corresponding web site or Google+ profile. (statements.listStatements)
   *
   * @param array $optParams Optional parameters.
   *
   * @opt_param string relation Use only associations that match the specified
   * relation. See the [`Statement`](#Statement) message for a detailed definition
   * of relation strings. For a query to match a statement, one of the following
   * must be true: * both the query's and the statement's relation strings match
   * exactly, or * the query's relation string is empty or missing. Example: A
   * query with relation `delegate_permission/common.handle_all_urls` matches an
   * asset link with relation `delegate_permission/common.handle_all_urls`.
   * @opt_param string source.androidApp.certificate.sha256Fingerprint The
   * uppercase SHA-265 fingerprint of the certificate. From the PEM certificate,
   * it can be acquired like this: $ keytool -printcert -file $CERTFILE | grep
   * SHA256: SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83: \
   * 42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 or like this: $ openssl x509 -in
   * $CERTFILE -noout -fingerprint -sha256 SHA256
   * Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64: \
   * 16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 In this example, the contents
   * of this field would be `14:6D:E9:83:C5:73:
   * 06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:
   * 44:E5`. If these tools are not available to you, you can convert the PEM
   * certificate into the DER format, compute the SHA-256 hash of that string and
   * represent the result as a hexstring (that is, uppercase hexadecimal
   * representations of each octet, separated by colons).
   * @opt_param string source.androidApp.packageName Android App assets are
   * naturally identified by their Java package name. For example, the Google Maps
   * app uses the package name `com.google.android.apps.maps`. REQUIRED
   * @opt_param string source.web.site Web assets are identified by a URL that
   * contains only the scheme, hostname and port parts. The format is
   * http[s]://[:] Hostnames must be fully qualified: they must end in a single
   * period ("`.`"). Only the schemes "http" and "https" are currently allowed.
   * Port numbers are given as a decimal number, and they must be omitted if the
   * standard port numbers are used: 80 for http and 443 for https. We call this
   * limited URL the "site". All URLs that share the same scheme, hostname and
   * port are considered to be a part of the site and thus belong to the web
   * asset. Example: the asset with the site `https://www.google.com` contains all
   * these URLs: * `https://www.google.com/` * `https://www.google.com:443/` *
   * `https://www.google.com/foo` * `https://www.google.com/foo?bar` *
   * `https://www.google.com/foo#bar` * `https://user@password:www.google.com/`
   * But it does not contain these URLs: * `http://www.google.com/` (wrong scheme)
   * * `https://google.com/` (hostname does not match) *
   * `https://www.google.com:444/` (port does not match) REQUIRED
   * @return Google_Service_Digitalassetlinks_ListResponse
   */
  public function listStatements($optParams = array())
  {
    $params = array();
    $params = array_merge($params, $optParams);
    return $this->call('list', array($params), "Google_Service_Digitalassetlinks_ListResponse");
  }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:53:"\Google_Service_Digitalassetlinks_Resource_Statements";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\Google_Service_Digitalassetlinks_Resource_Statements";s:36:" phpDocumentor\Reflection\Fqsen name";s:52:"Google_Service_Digitalassetlinks_Resource_Statements";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:39:"The "statements" collection of methods.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:158:"Typical usage is:
<code>
 $digitalassetlinksService = new Google_Service_Digitalassetlinks(...);
 $statements = $digitalassetlinksService->statements;
</code>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:24:"\Google_Service_Resource";s:36:" phpDocumentor\Reflection\Fqsen name";s:23:"Google_Service_Resource";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:71:"\Google_Service_Digitalassetlinks_Resource_Statements::listStatements()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:1008:"Retrieves a list of all statements from a given source that match the
specified target and statement string. The API guarantees that all statements
with secure source assets, such as HTTPS websites or Android apps, have been
made in a secure way by the owner of those assets, as described in the
[Digital Asset Links technical design
specification](https://github.com/google/digitalassetlinks/blob/master/well-
known/details.md). Specifically, you should consider that for insecure
websites (that is, where the URL starts with `http://` instead of
`https://`), this guarantee cannot be made. The `List` command is most useful
in cases where the API client wants to know all the ways in which two assets
are related, or enumerate all the relationships from a particular source
asset. Example: a feature that helps users navigate to related items. When a
mobile app is running on a device, the feature would make it easy to navigate
to the corresponding web site or Google+ profile. (statements.listStatements)";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:6:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:9:"optParams";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:20:"Optional parameters.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"opt_param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:513:"string relation Use only associations that match the specified
relation. See the [`Statement`](#Statement) message for a detailed definition
of relation strings. For a query to match a statement, one of the following
must be true: * both the query's and the statement's relation strings match
exactly, or * the query's relation string is empty or missing. Example: A
query with relation `delegate_permission/common.handle_all_urls` matches an
asset link with relation `delegate_permission/common.handle_all_urls`.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"opt_param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:929:"string source.androidApp.certificate.sha256Fingerprint The
uppercase SHA-265 fingerprint of the certificate. From the PEM certificate,
it can be acquired like this: $ keytool -printcert -file $CERTFILE | grep
SHA256: SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83: \
42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 or like this: $ openssl x509 -in
$CERTFILE -noout -fingerprint -sha256 SHA256
Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64: \
16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 In this example, the contents
of this field would be `14:6D:E9:83:C5:73:
06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:
44:E5`. If these tools are not available to you, you can convert the PEM
certificate into the DER format, compute the SHA-256 hash of that string and
represent the result as a hexstring (that is, uppercase hexadecimal
representations of each octet, separated by colons).";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"opt_param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:204:"string source.androidApp.packageName Android App assets are
naturally identified by their Java package name. For example, the Google Maps
app uses the package name `com.google.android.apps.maps`. REQUIRED";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:4;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"opt_param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:1059:"string source.web.site Web assets are identified by a URL that
contains only the scheme, hostname and port parts. The format is
http[s]://[:] Hostnames must be fully qualified: they must end in a single
period ("`.`"). Only the schemes "http" and "https" are currently allowed.
Port numbers are given as a decimal number, and they must be omitted if the
standard port numbers are used: 80 for http and 443 for https. We call this
limited URL the "site". All URLs that share the same scheme, hostname and
port are considered to be a part of the site and thus belong to the web
asset. Example: the asset with the site `https://www.google.com` contains all
these URLs: * `https://www.google.com/` * `https://www.google.com:443/` *
`https://www.google.com/foo` * `https://www.google.com/foo?bar` *
`https://www.google.com/foo#bar` * `https://user@password:www.google.com/`
But it does not contain these URLs: * `http://www.google.com/` (wrong scheme)
* `https://google.com/` (hostname does not match) *
`https://www.google.com:444/` (port does not match) REQUIRED";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:46:"\Google_Service_Digitalassetlinks_ListResponse";s:36:" phpDocumentor\Reflection\Fqsen name";s:45:"Google_Service_Digitalassetlinks_ListResponse";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:28;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\Google_Service_Digitalassetlinks_Resource_Statements::listStatements()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"listStatements";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"optParams";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:7:"array()";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:87;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:26;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";