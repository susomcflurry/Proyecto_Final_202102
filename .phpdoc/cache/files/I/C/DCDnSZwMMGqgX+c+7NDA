1644527253
AwuilbDvXz%3Ac426d0b919c08afc8af2bab038316138-4ae38a0dd390e4c62b3b32f22bc296cb
s:41936:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjRhZTM4YTBkZDM5MGU0YzYyYjNiMzJmMjJiYzI5NmNiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6IkZvbGRlcnNUaW1lU2VyaWVzLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjk3OiJzcmMvdmVuZG9yL2dvb2dsZS9hcGljbGllbnQtc2VydmljZXMvc3JjL0dvb2dsZS9TZXJ2aWNlL01vbml0b3JpbmcvUmVzb3VyY2UvRm9sZGVyc1RpbWVTZXJpZXMucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMDExODoiPD9waHAKLyoKICogQ29weXJpZ2h0IDIwMTQgR29vZ2xlIEluYy4KICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkgbm90CiAqIHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mCiAqIHRoZSBMaWNlbnNlIGF0CiAqCiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQKICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlCiAqIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyCiAqIHRoZSBMaWNlbnNlLgogKi8KCi8qKgogKiBUaGUgInRpbWVTZXJpZXMiIGNvbGxlY3Rpb24gb2YgbWV0aG9kcy4KICogVHlwaWNhbCB1c2FnZSBpczoKICogIDxjb2RlPgogKiAgICRtb25pdG9yaW5nU2VydmljZSA9IG5ldyBHb29nbGVfU2VydmljZV9Nb25pdG9yaW5nKC4uLik7CiAqICAgJHRpbWVTZXJpZXMgPSAkbW9uaXRvcmluZ1NlcnZpY2UtPnRpbWVTZXJpZXM7CiAqICA8L2NvZGU+CiAqLwpjbGFzcyBHb29nbGVfU2VydmljZV9Nb25pdG9yaW5nX1Jlc291cmNlX0ZvbGRlcnNUaW1lU2VyaWVzIGV4dGVuZHMgR29vZ2xlX1NlcnZpY2VfUmVzb3VyY2UKewogIC8qKgogICAqIExpc3RzIHRpbWUgc2VyaWVzIHRoYXQgbWF0Y2ggYSBmaWx0ZXIuIFRoaXMgbWV0aG9kIGRvZXMgbm90IHJlcXVpcmUgYQogICAqIFdvcmtzcGFjZS4gKHRpbWVTZXJpZXMubGlzdEZvbGRlcnNUaW1lU2VyaWVzKQogICAqCiAgICogQHBhcmFtIHN0cmluZyAkbmFtZSBSZXF1aXJlZC4gVGhlIHByb2plY3QsIG9yZ2FuaXphdGlvbiBvciBmb2xkZXIgb24gd2hpY2ggdG8KICAgKiBleGVjdXRlIHRoZSByZXF1ZXN0LiBUaGUgZm9ybWF0IGlzOiBwcm9qZWN0cy9bUFJPSkVDVF9JRF9PUl9OVU1CRVJdCiAgICogb3JnYW5pemF0aW9ucy9bT1JHQU5JWkFUSU9OX0lEXSBmb2xkZXJzL1tGT0xERVJfSURdCiAgICogQHBhcmFtIGFycmF5ICRvcHRQYXJhbXMgT3B0aW9uYWwgcGFyYW1ldGVycy4KICAgKgogICAqIEBvcHRfcGFyYW0gc3RyaW5nIGFnZ3JlZ2F0aW9uLmFsaWdubWVudFBlcmlvZCBUaGUgYWxpZ25tZW50X3BlcmlvZCBzcGVjaWZpZXMKICAgKiBhIHRpbWUgaW50ZXJ2YWwsIGluIHNlY29uZHMsIHRoYXQgaXMgdXNlZCB0byBkaXZpZGUgdGhlIGRhdGEgaW4gYWxsIHRoZSB0aW1lCiAgICogc2VyaWVzIGludG8gY29uc2lzdGVudCBibG9ja3Mgb2YgdGltZS4gVGhpcyB3aWxsIGJlIGRvbmUgYmVmb3JlIHRoZSBwZXItCiAgICogc2VyaWVzIGFsaWduZXIgY2FuIGJlIGFwcGxpZWQgdG8gdGhlIGRhdGEuVGhlIHZhbHVlIG11c3QgYmUgYXQgbGVhc3QgNjAKICAgKiBzZWNvbmRzLiBJZiBhIHBlci1zZXJpZXMgYWxpZ25lciBvdGhlciB0aGFuIEFMSUdOX05PTkUgaXMgc3BlY2lmaWVkLCB0aGlzCiAgICogZmllbGQgaXMgcmVxdWlyZWQgb3IgYW4gZXJyb3IgaXMgcmV0dXJuZWQuIElmIG5vIHBlci1zZXJpZXMgYWxpZ25lciBpcwogICAqIHNwZWNpZmllZCwgb3IgdGhlIGFsaWduZXIgQUxJR05fTk9ORSBpcyBzcGVjaWZpZWQsIHRoZW4gdGhpcyBmaWVsZCBpcwogICAqIGlnbm9yZWQuVGhlIG1heGltdW0gdmFsdWUgb2YgdGhlIGFsaWdubWVudF9wZXJpb2QgaXMgMTA0IHdlZWtzICgyIHllYXJzKSBmb3IKICAgKiBjaGFydHMsIGFuZCA5MCwwMDAgc2Vjb25kcyAoMjUgaG91cnMpIGZvciBhbGVydGluZyBwb2xpY2llcy4KICAgKiBAb3B0X3BhcmFtIHN0cmluZyBhZ2dyZWdhdGlvbi5jcm9zc1Nlcmllc1JlZHVjZXIgVGhlIHJlZHVjdGlvbiBvcGVyYXRpb24gdG8KICAgKiBiZSB1c2VkIHRvIGNvbWJpbmUgdGltZSBzZXJpZXMgaW50byBhIHNpbmdsZSB0aW1lIHNlcmllcywgd2hlcmUgdGhlIHZhbHVlIG9mCiAgICogZWFjaCBkYXRhIHBvaW50IGluIHRoZSByZXN1bHRpbmcgc2VyaWVzIGlzIGEgZnVuY3Rpb24gb2YgYWxsIHRoZSBhbHJlYWR5CiAgICogYWxpZ25lZCB2YWx1ZXMgaW4gdGhlIGlucHV0IHRpbWUgc2VyaWVzLk5vdCBhbGwgcmVkdWNlciBvcGVyYXRpb25zIGNhbiBiZQogICAqIGFwcGxpZWQgdG8gYWxsIHRpbWUgc2VyaWVzLiBUaGUgdmFsaWQgY2hvaWNlcyBkZXBlbmQgb24gdGhlIG1ldHJpY19raW5kIGFuZAogICAqIHRoZSB2YWx1ZV90eXBlIG9mIHRoZSBvcmlnaW5hbCB0aW1lIHNlcmllcy4gUmVkdWN0aW9uIGNhbiB5aWVsZCBhIHRpbWUgc2VyaWVzCiAgICogd2l0aCBhIGRpZmZlcmVudCBtZXRyaWNfa2luZCBvciB2YWx1ZV90eXBlIHRoYW4gdGhlIGlucHV0IHRpbWUgc2VyaWVzLlRpbWUKICAgKiBzZXJpZXMgZGF0YSBtdXN0IGZpcnN0IGJlIGFsaWduZWQgKHNlZSBwZXJfc2VyaWVzX2FsaWduZXIpIGluIG9yZGVyIHRvCiAgICogcGVyZm9ybSBjcm9zcy10aW1lIHNlcmllcyByZWR1Y3Rpb24uIElmIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIHNwZWNpZmllZCwKICAgKiB0aGVuIHBlcl9zZXJpZXNfYWxpZ25lciBtdXN0IGJlIHNwZWNpZmllZCwgYW5kIG11c3Qgbm90IGJlIEFMSUdOX05PTkUuIEFuCiAgICogYWxpZ25tZW50X3BlcmlvZCBtdXN0IGFsc28gYmUgc3BlY2lmaWVkOyBvdGhlcndpc2UsIGFuIGVycm9yIGlzIHJldHVybmVkLgogICAqIEBvcHRfcGFyYW0gc3RyaW5nIGFnZ3JlZ2F0aW9uLmdyb3VwQnlGaWVsZHMgVGhlIHNldCBvZiBmaWVsZHMgdG8gcHJlc2VydmUKICAgKiB3aGVuIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIHNwZWNpZmllZC4gVGhlIGdyb3VwX2J5X2ZpZWxkcyBkZXRlcm1pbmUgaG93IHRoZQogICAqIHRpbWUgc2VyaWVzIGFyZSBwYXJ0aXRpb25lZCBpbnRvIHN1YnNldHMgcHJpb3IgdG8gYXBwbHlpbmcgdGhlIGFnZ3JlZ2F0aW9uCiAgICogb3BlcmF0aW9uLiBFYWNoIHN1YnNldCBjb250YWlucyB0aW1lIHNlcmllcyB0aGF0IGhhdmUgdGhlIHNhbWUgdmFsdWUgZm9yIGVhY2gKICAgKiBvZiB0aGUgZ3JvdXBpbmcgZmllbGRzLiBFYWNoIGluZGl2aWR1YWwgdGltZSBzZXJpZXMgaXMgYSBtZW1iZXIgb2YgZXhhY3RseQogICAqIG9uZSBzdWJzZXQuIFRoZSBjcm9zc19zZXJpZXNfcmVkdWNlciBpcyBhcHBsaWVkIHRvIGVhY2ggc3Vic2V0IG9mIHRpbWUKICAgKiBzZXJpZXMuIEl0IGlzIG5vdCBwb3NzaWJsZSB0byByZWR1Y2UgYWNyb3NzIGRpZmZlcmVudCByZXNvdXJjZSB0eXBlcywgc28gdGhpcwogICAqIGZpZWxkIGltcGxpY2l0bHkgY29udGFpbnMgcmVzb3VyY2UudHlwZS4gRmllbGRzIG5vdCBzcGVjaWZpZWQgaW4KICAgKiBncm91cF9ieV9maWVsZHMgYXJlIGFnZ3JlZ2F0ZWQgYXdheS4gSWYgZ3JvdXBfYnlfZmllbGRzIGlzIG5vdCBzcGVjaWZpZWQgYW5kCiAgICogYWxsIHRoZSB0aW1lIHNlcmllcyBoYXZlIHRoZSBzYW1lIHJlc291cmNlIHR5cGUsIHRoZW4gdGhlIHRpbWUgc2VyaWVzIGFyZQogICAqIGFnZ3JlZ2F0ZWQgaW50byBhIHNpbmdsZSBvdXRwdXQgdGltZSBzZXJpZXMuIElmIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIG5vdAogICAqIGRlZmluZWQsIHRoaXMgZmllbGQgaXMgaWdub3JlZC4KICAgKiBAb3B0X3BhcmFtIHN0cmluZyBhZ2dyZWdhdGlvbi5wZXJTZXJpZXNBbGlnbmVyIEFuIEFsaWduZXIgZGVzY3JpYmVzIGhvdyB0bwogICAqIGJyaW5nIHRoZSBkYXRhIHBvaW50cyBpbiBhIHNpbmdsZSB0aW1lIHNlcmllcyBpbnRvIHRlbXBvcmFsIGFsaWdubWVudC4gRXhjZXB0CiAgICogZm9yIEFMSUdOX05PTkUsIGFsbCBhbGlnbm1lbnRzIGNhdXNlIGFsbCB0aGUgZGF0YSBwb2ludHMgaW4gYW4KICAgKiBhbGlnbm1lbnRfcGVyaW9kIHRvIGJlIG1hdGhlbWF0aWNhbGx5IGdyb3VwZWQgdG9nZXRoZXIsIHJlc3VsdGluZyBpbiBhIHNpbmdsZQogICAqIGRhdGEgcG9pbnQgZm9yIGVhY2ggYWxpZ25tZW50X3BlcmlvZCB3aXRoIGVuZCB0aW1lc3RhbXAgYXQgdGhlIGVuZCBvZiB0aGUKICAgKiBwZXJpb2QuTm90IGFsbCBhbGlnbm1lbnQgb3BlcmF0aW9ucyBtYXkgYmUgYXBwbGllZCB0byBhbGwgdGltZSBzZXJpZXMuIFRoZQogICAqIHZhbGlkIGNob2ljZXMgZGVwZW5kIG9uIHRoZSBtZXRyaWNfa2luZCBhbmQgdmFsdWVfdHlwZSBvZiB0aGUgb3JpZ2luYWwgdGltZQogICAqIHNlcmllcy4gQWxpZ25tZW50IGNhbiBjaGFuZ2UgdGhlIG1ldHJpY19raW5kIG9yIHRoZSB2YWx1ZV90eXBlIG9mIHRoZSB0aW1lCiAgICogc2VyaWVzLlRpbWUgc2VyaWVzIGRhdGEgbXVzdCBiZSBhbGlnbmVkIGluIG9yZGVyIHRvIHBlcmZvcm0gY3Jvc3MtdGltZSBzZXJpZXMKICAgKiByZWR1Y3Rpb24uIElmIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIHNwZWNpZmllZCwgdGhlbiBwZXJfc2VyaWVzX2FsaWduZXIgbXVzdAogICAqIGJlIHNwZWNpZmllZCBhbmQgbm90IGVxdWFsIHRvIEFMSUdOX05PTkUgYW5kIGFsaWdubWVudF9wZXJpb2QgbXVzdCBiZQogICAqIHNwZWNpZmllZDsgb3RoZXJ3aXNlLCBhbiBlcnJvciBpcyByZXR1cm5lZC4KICAgKiBAb3B0X3BhcmFtIHN0cmluZyBmaWx0ZXIgUmVxdWlyZWQuIEEgbW9uaXRvcmluZyBmaWx0ZXIKICAgKiAoaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL21vbml0b3JpbmcvYXBpL3YzL2ZpbHRlcnMpIHRoYXQgc3BlY2lmaWVzIHdoaWNoCiAgICogdGltZSBzZXJpZXMgc2hvdWxkIGJlIHJldHVybmVkLiBUaGUgZmlsdGVyIG11c3Qgc3BlY2lmeSBhIHNpbmdsZSBtZXRyaWMgdHlwZSwKICAgKiBhbmQgY2FuIGFkZGl0aW9uYWxseSBzcGVjaWZ5IG1ldHJpYyBsYWJlbHMgYW5kIG90aGVyIGluZm9ybWF0aW9uLiBGb3IKICAgKiBleGFtcGxlOiBtZXRyaWMudHlwZSA9ICJjb21wdXRlLmdvb2dsZWFwaXMuY29tL2luc3RhbmNlL2NwdS91c2FnZV90aW1lIiBBTkQKICAgKiBtZXRyaWMubGFiZWxzLmluc3RhbmNlX25hbWUgPSAibXktaW5zdGFuY2UtbmFtZSIKICAgKiBAb3B0X3BhcmFtIHN0cmluZyBpbnRlcnZhbC5lbmRUaW1lIFJlcXVpcmVkLiBUaGUgZW5kIG9mIHRoZSB0aW1lIGludGVydmFsLgogICAqIEBvcHRfcGFyYW0gc3RyaW5nIGludGVydmFsLnN0YXJ0VGltZSBPcHRpb25hbC4gVGhlIGJlZ2lubmluZyBvZiB0aGUgdGltZQogICAqIGludGVydmFsLiBUaGUgZGVmYXVsdCB2YWx1ZSBmb3IgdGhlIHN0YXJ0IHRpbWUgaXMgdGhlIGVuZCB0aW1lLiBUaGUgc3RhcnQKICAgKiB0aW1lIG11c3Qgbm90IGJlIGxhdGVyIHRoYW4gdGhlIGVuZCB0aW1lLgogICAqIEBvcHRfcGFyYW0gc3RyaW5nIG9yZGVyQnkgVW5zdXBwb3J0ZWQ6IG11c3QgYmUgbGVmdCBibGFuay4gVGhlIHBvaW50cyBpbiBlYWNoCiAgICogdGltZSBzZXJpZXMgYXJlIGN1cnJlbnRseSByZXR1cm5lZCBpbiByZXZlcnNlIHRpbWUgb3JkZXIgKG1vc3QgcmVjZW50IHRvCiAgICogb2xkZXN0KS4KICAgKiBAb3B0X3BhcmFtIGludCBwYWdlU2l6ZSBBIHBvc2l0aXZlIG51bWJlciB0aGF0IGlzIHRoZSBtYXhpbXVtIG51bWJlciBvZgogICAqIHJlc3VsdHMgdG8gcmV0dXJuLiBJZiBwYWdlX3NpemUgaXMgZW1wdHkgb3IgbW9yZSB0aGFuIDEwMCwwMDAgcmVzdWx0cywgdGhlCiAgICogZWZmZWN0aXZlIHBhZ2Vfc2l6ZSBpcyAxMDAsMDAwIHJlc3VsdHMuIElmIHZpZXcgaXMgc2V0IHRvIEZVTEwsIHRoaXMgaXMgdGhlCiAgICogbWF4aW11bSBudW1iZXIgb2YgUG9pbnRzIHJldHVybmVkLiBJZiB2aWV3IGlzIHNldCB0byBIRUFERVJTLCB0aGlzIGlzIHRoZQogICAqIG1heGltdW0gbnVtYmVyIG9mIFRpbWVTZXJpZXMgcmV0dXJuZWQuCiAgICogQG9wdF9wYXJhbSBzdHJpbmcgcGFnZVRva2VuIElmIHRoaXMgZmllbGQgaXMgbm90IGVtcHR5IHRoZW4gaXQgbXVzdCBjb250YWluCiAgICogdGhlIG5leHRQYWdlVG9rZW4gdmFsdWUgcmV0dXJuZWQgYnkgYSBwcmV2aW91cyBjYWxsIHRvIHRoaXMgbWV0aG9kLiBVc2luZwogICAqIHRoaXMgZmllbGQgY2F1c2VzIHRoZSBtZXRob2QgdG8gcmV0dXJuIGFkZGl0aW9uYWwgcmVzdWx0cyBmcm9tIHRoZSBwcmV2aW91cwogICAqIG1ldGhvZCBjYWxsLgogICAqIEBvcHRfcGFyYW0gc3RyaW5nIHNlY29uZGFyeUFnZ3JlZ2F0aW9uLmFsaWdubWVudFBlcmlvZCBUaGUgYWxpZ25tZW50X3BlcmlvZAogICAqIHNwZWNpZmllcyBhIHRpbWUgaW50ZXJ2YWwsIGluIHNlY29uZHMsIHRoYXQgaXMgdXNlZCB0byBkaXZpZGUgdGhlIGRhdGEgaW4gYWxsCiAgICogdGhlIHRpbWUgc2VyaWVzIGludG8gY29uc2lzdGVudCBibG9ja3Mgb2YgdGltZS4gVGhpcyB3aWxsIGJlIGRvbmUgYmVmb3JlIHRoZQogICAqIHBlci1zZXJpZXMgYWxpZ25lciBjYW4gYmUgYXBwbGllZCB0byB0aGUgZGF0YS5UaGUgdmFsdWUgbXVzdCBiZSBhdCBsZWFzdCA2MAogICAqIHNlY29uZHMuIElmIGEgcGVyLXNlcmllcyBhbGlnbmVyIG90aGVyIHRoYW4gQUxJR05fTk9ORSBpcyBzcGVjaWZpZWQsIHRoaXMKICAgKiBmaWVsZCBpcyByZXF1aXJlZCBvciBhbiBlcnJvciBpcyByZXR1cm5lZC4gSWYgbm8gcGVyLXNlcmllcyBhbGlnbmVyIGlzCiAgICogc3BlY2lmaWVkLCBvciB0aGUgYWxpZ25lciBBTElHTl9OT05FIGlzIHNwZWNpZmllZCwgdGhlbiB0aGlzIGZpZWxkIGlzCiAgICogaWdub3JlZC5UaGUgbWF4aW11bSB2YWx1ZSBvZiB0aGUgYWxpZ25tZW50X3BlcmlvZCBpcyAxMDQgd2Vla3MgKDIgeWVhcnMpIGZvcgogICAqIGNoYXJ0cywgYW5kIDkwLDAwMCBzZWNvbmRzICgyNSBob3VycykgZm9yIGFsZXJ0aW5nIHBvbGljaWVzLgogICAqIEBvcHRfcGFyYW0gc3RyaW5nIHNlY29uZGFyeUFnZ3JlZ2F0aW9uLmNyb3NzU2VyaWVzUmVkdWNlciBUaGUgcmVkdWN0aW9uCiAgICogb3BlcmF0aW9uIHRvIGJlIHVzZWQgdG8gY29tYmluZSB0aW1lIHNlcmllcyBpbnRvIGEgc2luZ2xlIHRpbWUgc2VyaWVzLCB3aGVyZQogICAqIHRoZSB2YWx1ZSBvZiBlYWNoIGRhdGEgcG9pbnQgaW4gdGhlIHJlc3VsdGluZyBzZXJpZXMgaXMgYSBmdW5jdGlvbiBvZiBhbGwgdGhlCiAgICogYWxyZWFkeSBhbGlnbmVkIHZhbHVlcyBpbiB0aGUgaW5wdXQgdGltZSBzZXJpZXMuTm90IGFsbCByZWR1Y2VyIG9wZXJhdGlvbnMKICAgKiBjYW4gYmUgYXBwbGllZCB0byBhbGwgdGltZSBzZXJpZXMuIFRoZSB2YWxpZCBjaG9pY2VzIGRlcGVuZCBvbiB0aGUKICAgKiBtZXRyaWNfa2luZCBhbmQgdGhlIHZhbHVlX3R5cGUgb2YgdGhlIG9yaWdpbmFsIHRpbWUgc2VyaWVzLiBSZWR1Y3Rpb24gY2FuCiAgICogeWllbGQgYSB0aW1lIHNlcmllcyB3aXRoIGEgZGlmZmVyZW50IG1ldHJpY19raW5kIG9yIHZhbHVlX3R5cGUgdGhhbiB0aGUgaW5wdXQKICAgKiB0aW1lIHNlcmllcy5UaW1lIHNlcmllcyBkYXRhIG11c3QgZmlyc3QgYmUgYWxpZ25lZCAoc2VlIHBlcl9zZXJpZXNfYWxpZ25lcikKICAgKiBpbiBvcmRlciB0byBwZXJmb3JtIGNyb3NzLXRpbWUgc2VyaWVzIHJlZHVjdGlvbi4gSWYgY3Jvc3Nfc2VyaWVzX3JlZHVjZXIgaXMKICAgKiBzcGVjaWZpZWQsIHRoZW4gcGVyX3Nlcmllc19hbGlnbmVyIG11c3QgYmUgc3BlY2lmaWVkLCBhbmQgbXVzdCBub3QgYmUKICAgKiBBTElHTl9OT05FLiBBbiBhbGlnbm1lbnRfcGVyaW9kIG11c3QgYWxzbyBiZSBzcGVjaWZpZWQ7IG90aGVyd2lzZSwgYW4gZXJyb3IKICAgKiBpcyByZXR1cm5lZC4KICAgKiBAb3B0X3BhcmFtIHN0cmluZyBzZWNvbmRhcnlBZ2dyZWdhdGlvbi5ncm91cEJ5RmllbGRzIFRoZSBzZXQgb2YgZmllbGRzIHRvCiAgICogcHJlc2VydmUgd2hlbiBjcm9zc19zZXJpZXNfcmVkdWNlciBpcyBzcGVjaWZpZWQuIFRoZSBncm91cF9ieV9maWVsZHMKICAgKiBkZXRlcm1pbmUgaG93IHRoZSB0aW1lIHNlcmllcyBhcmUgcGFydGl0aW9uZWQgaW50byBzdWJzZXRzIHByaW9yIHRvIGFwcGx5aW5nCiAgICogdGhlIGFnZ3JlZ2F0aW9uIG9wZXJhdGlvbi4gRWFjaCBzdWJzZXQgY29udGFpbnMgdGltZSBzZXJpZXMgdGhhdCBoYXZlIHRoZQogICAqIHNhbWUgdmFsdWUgZm9yIGVhY2ggb2YgdGhlIGdyb3VwaW5nIGZpZWxkcy4gRWFjaCBpbmRpdmlkdWFsIHRpbWUgc2VyaWVzIGlzIGEKICAgKiBtZW1iZXIgb2YgZXhhY3RseSBvbmUgc3Vic2V0LiBUaGUgY3Jvc3Nfc2VyaWVzX3JlZHVjZXIgaXMgYXBwbGllZCB0byBlYWNoCiAgICogc3Vic2V0IG9mIHRpbWUgc2VyaWVzLiBJdCBpcyBub3QgcG9zc2libGUgdG8gcmVkdWNlIGFjcm9zcyBkaWZmZXJlbnQgcmVzb3VyY2UKICAgKiB0eXBlcywgc28gdGhpcyBmaWVsZCBpbXBsaWNpdGx5IGNvbnRhaW5zIHJlc291cmNlLnR5cGUuIEZpZWxkcyBub3Qgc3BlY2lmaWVkCiAgICogaW4gZ3JvdXBfYnlfZmllbGRzIGFyZSBhZ2dyZWdhdGVkIGF3YXkuIElmIGdyb3VwX2J5X2ZpZWxkcyBpcyBub3Qgc3BlY2lmaWVkCiAgICogYW5kIGFsbCB0aGUgdGltZSBzZXJpZXMgaGF2ZSB0aGUgc2FtZSByZXNvdXJjZSB0eXBlLCB0aGVuIHRoZSB0aW1lIHNlcmllcyBhcmUKICAgKiBhZ2dyZWdhdGVkIGludG8gYSBzaW5nbGUgb3V0cHV0IHRpbWUgc2VyaWVzLiBJZiBjcm9zc19zZXJpZXNfcmVkdWNlciBpcyBub3QKICAgKiBkZWZpbmVkLCB0aGlzIGZpZWxkIGlzIGlnbm9yZWQuCiAgICogQG9wdF9wYXJhbSBzdHJpbmcgc2Vjb25kYXJ5QWdncmVnYXRpb24ucGVyU2VyaWVzQWxpZ25lciBBbiBBbGlnbmVyIGRlc2NyaWJlcwogICAqIGhvdyB0byBicmluZyB0aGUgZGF0YSBwb2ludHMgaW4gYSBzaW5nbGUgdGltZSBzZXJpZXMgaW50byB0ZW1wb3JhbCBhbGlnbm1lbnQuCiAgICogRXhjZXB0IGZvciBBTElHTl9OT05FLCBhbGwgYWxpZ25tZW50cyBjYXVzZSBhbGwgdGhlIGRhdGEgcG9pbnRzIGluIGFuCiAgICogYWxpZ25tZW50X3BlcmlvZCB0byBiZSBtYXRoZW1hdGljYWxseSBncm91cGVkIHRvZ2V0aGVyLCByZXN1bHRpbmcgaW4gYSBzaW5nbGUKICAgKiBkYXRhIHBvaW50IGZvciBlYWNoIGFsaWdubWVudF9wZXJpb2Qgd2l0aCBlbmQgdGltZXN0YW1wIGF0IHRoZSBlbmQgb2YgdGhlCiAgICogcGVyaW9kLk5vdCBhbGwgYWxpZ25tZW50IG9wZXJhdGlvbnMgbWF5IGJlIGFwcGxpZWQgdG8gYWxsIHRpbWUgc2VyaWVzLiBUaGUKICAgKiB2YWxpZCBjaG9pY2VzIGRlcGVuZCBvbiB0aGUgbWV0cmljX2tpbmQgYW5kIHZhbHVlX3R5cGUgb2YgdGhlIG9yaWdpbmFsIHRpbWUKICAgKiBzZXJpZXMuIEFsaWdubWVudCBjYW4gY2hhbmdlIHRoZSBtZXRyaWNfa2luZCBvciB0aGUgdmFsdWVfdHlwZSBvZiB0aGUgdGltZQogICAqIHNlcmllcy5UaW1lIHNlcmllcyBkYXRhIG11c3QgYmUgYWxpZ25lZCBpbiBvcmRlciB0byBwZXJmb3JtIGNyb3NzLXRpbWUgc2VyaWVzCiAgICogcmVkdWN0aW9uLiBJZiBjcm9zc19zZXJpZXNfcmVkdWNlciBpcyBzcGVjaWZpZWQsIHRoZW4gcGVyX3Nlcmllc19hbGlnbmVyIG11c3QKICAgKiBiZSBzcGVjaWZpZWQgYW5kIG5vdCBlcXVhbCB0byBBTElHTl9OT05FIGFuZCBhbGlnbm1lbnRfcGVyaW9kIG11c3QgYmUKICAgKiBzcGVjaWZpZWQ7IG90aGVyd2lzZSwgYW4gZXJyb3IgaXMgcmV0dXJuZWQuCiAgICogQG9wdF9wYXJhbSBzdHJpbmcgdmlldyBSZXF1aXJlZC4gU3BlY2lmaWVzIHdoaWNoIGluZm9ybWF0aW9uIGlzIHJldHVybmVkCiAgICogYWJvdXQgdGhlIHRpbWUgc2VyaWVzLgogICAqIEByZXR1cm4gR29vZ2xlX1NlcnZpY2VfTW9uaXRvcmluZ19MaXN0VGltZVNlcmllc1Jlc3BvbnNlCiAgICovCiAgcHVibGljIGZ1bmN0aW9uIGxpc3RGb2xkZXJzVGltZVNlcmllcygkbmFtZSwgJG9wdFBhcmFtcyA9IGFycmF5KCkpCiAgewogICAgJHBhcmFtcyA9IGFycmF5KCduYW1lJyA9PiAkbmFtZSk7CiAgICAkcGFyYW1zID0gYXJyYXlfbWVyZ2UoJHBhcmFtcywgJG9wdFBhcmFtcyk7CiAgICByZXR1cm4gJHRoaXMtPmNhbGwoJ2xpc3QnLCBhcnJheSgkcGFyYW1zKSwgIkdvb2dsZV9TZXJ2aWNlX01vbml0b3JpbmdfTGlzdFRpbWVTZXJpZXNSZXNwb25zZSIpOwogIH0KfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czo1MzoiXEdvb2dsZV9TZXJ2aWNlX01vbml0b3JpbmdfUmVzb3VyY2VfRm9sZGVyc1RpbWVTZXJpZXMiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfIjoxMTp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTM6IlxHb29nbGVfU2VydmljZV9Nb25pdG9yaW5nX1Jlc291cmNlX0ZvbGRlcnNUaW1lU2VyaWVzIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NTI6Ikdvb2dsZV9TZXJ2aWNlX01vbml0b3JpbmdfUmVzb3VyY2VfRm9sZGVyc1RpbWVTZXJpZXMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjM5OiJUaGUgInRpbWVTZXJpZXMiIGNvbGxlY3Rpb24gb2YgbWV0aG9kcy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTM3OiJUeXBpY2FsIHVzYWdlIGlzOgo8Y29kZT4KICRtb25pdG9yaW5nU2VydmljZSA9IG5ldyBHb29nbGVfU2VydmljZV9Nb25pdG9yaW5nKC4uLik7CiAkdGltZVNlcmllcyA9ICRtb25pdG9yaW5nU2VydmljZS0+dGltZVNlcmllczsKPC9jb2RlPiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjQ6IlxHb29nbGVfU2VydmljZV9SZXNvdXJjZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIzOiJHb29nbGVfU2VydmljZV9SZXNvdXJjZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGhvZHMiO2E6MTp7czo3ODoiXEdvb2dsZV9TZXJ2aWNlX01vbml0b3JpbmdfUmVzb3VyY2VfRm9sZGVyc1RpbWVTZXJpZXM6Omxpc3RGb2xkZXJzVGltZVNlcmllcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxMTU6Ikxpc3RzIHRpbWUgc2VyaWVzIHRoYXQgbWF0Y2ggYSBmaWx0ZXIuIFRoaXMgbWV0aG9kIGRvZXMgbm90IHJlcXVpcmUgYQpXb3Jrc3BhY2UuICh0aW1lU2VyaWVzLmxpc3RGb2xkZXJzVGltZVNlcmllcykiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTg6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo0OiJuYW1lIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE3NzoiUmVxdWlyZWQuIFRoZSBwcm9qZWN0LCBvcmdhbml6YXRpb24gb3IgZm9sZGVyIG9uIHdoaWNoIHRvCmV4ZWN1dGUgdGhlIHJlcXVlc3QuIFRoZSBmb3JtYXQgaXM6IHByb2plY3RzL1tQUk9KRUNUX0lEX09SX05VTUJFUl0Kb3JnYW5pemF0aW9ucy9bT1JHQU5JWkFUSU9OX0lEXSBmb2xkZXJzL1tGT0xERVJfSURdIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjk6Im9wdFBhcmFtcyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MjA6Ik9wdGlvbmFsIHBhcmFtZXRlcnMuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo5OiJvcHRfcGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjY0MDoic3RyaW5nIGFnZ3JlZ2F0aW9uLmFsaWdubWVudFBlcmlvZCBUaGUgYWxpZ25tZW50X3BlcmlvZCBzcGVjaWZpZXMKYSB0aW1lIGludGVydmFsLCBpbiBzZWNvbmRzLCB0aGF0IGlzIHVzZWQgdG8gZGl2aWRlIHRoZSBkYXRhIGluIGFsbCB0aGUgdGltZQpzZXJpZXMgaW50byBjb25zaXN0ZW50IGJsb2NrcyBvZiB0aW1lLiBUaGlzIHdpbGwgYmUgZG9uZSBiZWZvcmUgdGhlIHBlci0Kc2VyaWVzIGFsaWduZXIgY2FuIGJlIGFwcGxpZWQgdG8gdGhlIGRhdGEuVGhlIHZhbHVlIG11c3QgYmUgYXQgbGVhc3QgNjAKc2Vjb25kcy4gSWYgYSBwZXItc2VyaWVzIGFsaWduZXIgb3RoZXIgdGhhbiBBTElHTl9OT05FIGlzIHNwZWNpZmllZCwgdGhpcwpmaWVsZCBpcyByZXF1aXJlZCBvciBhbiBlcnJvciBpcyByZXR1cm5lZC4gSWYgbm8gcGVyLXNlcmllcyBhbGlnbmVyIGlzCnNwZWNpZmllZCwgb3IgdGhlIGFsaWduZXIgQUxJR05fTk9ORSBpcyBzcGVjaWZpZWQsIHRoZW4gdGhpcyBmaWVsZCBpcwppZ25vcmVkLlRoZSBtYXhpbXVtIHZhbHVlIG9mIHRoZSBhbGlnbm1lbnRfcGVyaW9kIGlzIDEwNCB3ZWVrcyAoMiB5ZWFycykgZm9yCmNoYXJ0cywgYW5kIDkwLDAwMCBzZWNvbmRzICgyNSBob3VycykgZm9yIGFsZXJ0aW5nIHBvbGljaWVzLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MztPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6OToib3B0X3BhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo4MTE6InN0cmluZyBhZ2dyZWdhdGlvbi5jcm9zc1Nlcmllc1JlZHVjZXIgVGhlIHJlZHVjdGlvbiBvcGVyYXRpb24gdG8KYmUgdXNlZCB0byBjb21iaW5lIHRpbWUgc2VyaWVzIGludG8gYSBzaW5nbGUgdGltZSBzZXJpZXMsIHdoZXJlIHRoZSB2YWx1ZSBvZgplYWNoIGRhdGEgcG9pbnQgaW4gdGhlIHJlc3VsdGluZyBzZXJpZXMgaXMgYSBmdW5jdGlvbiBvZiBhbGwgdGhlIGFscmVhZHkKYWxpZ25lZCB2YWx1ZXMgaW4gdGhlIGlucHV0IHRpbWUgc2VyaWVzLk5vdCBhbGwgcmVkdWNlciBvcGVyYXRpb25zIGNhbiBiZQphcHBsaWVkIHRvIGFsbCB0aW1lIHNlcmllcy4gVGhlIHZhbGlkIGNob2ljZXMgZGVwZW5kIG9uIHRoZSBtZXRyaWNfa2luZCBhbmQKdGhlIHZhbHVlX3R5cGUgb2YgdGhlIG9yaWdpbmFsIHRpbWUgc2VyaWVzLiBSZWR1Y3Rpb24gY2FuIHlpZWxkIGEgdGltZSBzZXJpZXMKd2l0aCBhIGRpZmZlcmVudCBtZXRyaWNfa2luZCBvciB2YWx1ZV90eXBlIHRoYW4gdGhlIGlucHV0IHRpbWUgc2VyaWVzLlRpbWUKc2VyaWVzIGRhdGEgbXVzdCBmaXJzdCBiZSBhbGlnbmVkIChzZWUgcGVyX3Nlcmllc19hbGlnbmVyKSBpbiBvcmRlciB0bwpwZXJmb3JtIGNyb3NzLXRpbWUgc2VyaWVzIHJlZHVjdGlvbi4gSWYgY3Jvc3Nfc2VyaWVzX3JlZHVjZXIgaXMgc3BlY2lmaWVkLAp0aGVuIHBlcl9zZXJpZXNfYWxpZ25lciBtdXN0IGJlIHNwZWNpZmllZCwgYW5kIG11c3Qgbm90IGJlIEFMSUdOX05PTkUuIEFuCmFsaWdubWVudF9wZXJpb2QgbXVzdCBhbHNvIGJlIHNwZWNpZmllZDsgb3RoZXJ3aXNlLCBhbiBlcnJvciBpcyByZXR1cm5lZC4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjQ7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6ODQxOiJzdHJpbmcgYWdncmVnYXRpb24uZ3JvdXBCeUZpZWxkcyBUaGUgc2V0IG9mIGZpZWxkcyB0byBwcmVzZXJ2ZQp3aGVuIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIHNwZWNpZmllZC4gVGhlIGdyb3VwX2J5X2ZpZWxkcyBkZXRlcm1pbmUgaG93IHRoZQp0aW1lIHNlcmllcyBhcmUgcGFydGl0aW9uZWQgaW50byBzdWJzZXRzIHByaW9yIHRvIGFwcGx5aW5nIHRoZSBhZ2dyZWdhdGlvbgpvcGVyYXRpb24uIEVhY2ggc3Vic2V0IGNvbnRhaW5zIHRpbWUgc2VyaWVzIHRoYXQgaGF2ZSB0aGUgc2FtZSB2YWx1ZSBmb3IgZWFjaApvZiB0aGUgZ3JvdXBpbmcgZmllbGRzLiBFYWNoIGluZGl2aWR1YWwgdGltZSBzZXJpZXMgaXMgYSBtZW1iZXIgb2YgZXhhY3RseQpvbmUgc3Vic2V0LiBUaGUgY3Jvc3Nfc2VyaWVzX3JlZHVjZXIgaXMgYXBwbGllZCB0byBlYWNoIHN1YnNldCBvZiB0aW1lCnNlcmllcy4gSXQgaXMgbm90IHBvc3NpYmxlIHRvIHJlZHVjZSBhY3Jvc3MgZGlmZmVyZW50IHJlc291cmNlIHR5cGVzLCBzbyB0aGlzCmZpZWxkIGltcGxpY2l0bHkgY29udGFpbnMgcmVzb3VyY2UudHlwZS4gRmllbGRzIG5vdCBzcGVjaWZpZWQgaW4KZ3JvdXBfYnlfZmllbGRzIGFyZSBhZ2dyZWdhdGVkIGF3YXkuIElmIGdyb3VwX2J5X2ZpZWxkcyBpcyBub3Qgc3BlY2lmaWVkIGFuZAphbGwgdGhlIHRpbWUgc2VyaWVzIGhhdmUgdGhlIHNhbWUgcmVzb3VyY2UgdHlwZSwgdGhlbiB0aGUgdGltZSBzZXJpZXMgYXJlCmFnZ3JlZ2F0ZWQgaW50byBhIHNpbmdsZSBvdXRwdXQgdGltZSBzZXJpZXMuIElmIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIG5vdApkZWZpbmVkLCB0aGlzIGZpZWxkIGlzIGlnbm9yZWQuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aTo1O086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo5OiJvcHRfcGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjg1Mjoic3RyaW5nIGFnZ3JlZ2F0aW9uLnBlclNlcmllc0FsaWduZXIgQW4gQWxpZ25lciBkZXNjcmliZXMgaG93IHRvCmJyaW5nIHRoZSBkYXRhIHBvaW50cyBpbiBhIHNpbmdsZSB0aW1lIHNlcmllcyBpbnRvIHRlbXBvcmFsIGFsaWdubWVudC4gRXhjZXB0CmZvciBBTElHTl9OT05FLCBhbGwgYWxpZ25tZW50cyBjYXVzZSBhbGwgdGhlIGRhdGEgcG9pbnRzIGluIGFuCmFsaWdubWVudF9wZXJpb2QgdG8gYmUgbWF0aGVtYXRpY2FsbHkgZ3JvdXBlZCB0b2dldGhlciwgcmVzdWx0aW5nIGluIGEgc2luZ2xlCmRhdGEgcG9pbnQgZm9yIGVhY2ggYWxpZ25tZW50X3BlcmlvZCB3aXRoIGVuZCB0aW1lc3RhbXAgYXQgdGhlIGVuZCBvZiB0aGUKcGVyaW9kLk5vdCBhbGwgYWxpZ25tZW50IG9wZXJhdGlvbnMgbWF5IGJlIGFwcGxpZWQgdG8gYWxsIHRpbWUgc2VyaWVzLiBUaGUKdmFsaWQgY2hvaWNlcyBkZXBlbmQgb24gdGhlIG1ldHJpY19raW5kIGFuZCB2YWx1ZV90eXBlIG9mIHRoZSBvcmlnaW5hbCB0aW1lCnNlcmllcy4gQWxpZ25tZW50IGNhbiBjaGFuZ2UgdGhlIG1ldHJpY19raW5kIG9yIHRoZSB2YWx1ZV90eXBlIG9mIHRoZSB0aW1lCnNlcmllcy5UaW1lIHNlcmllcyBkYXRhIG11c3QgYmUgYWxpZ25lZCBpbiBvcmRlciB0byBwZXJmb3JtIGNyb3NzLXRpbWUgc2VyaWVzCnJlZHVjdGlvbi4gSWYgY3Jvc3Nfc2VyaWVzX3JlZHVjZXIgaXMgc3BlY2lmaWVkLCB0aGVuIHBlcl9zZXJpZXNfYWxpZ25lciBtdXN0CmJlIHNwZWNpZmllZCBhbmQgbm90IGVxdWFsIHRvIEFMSUdOX05PTkUgYW5kIGFsaWdubWVudF9wZXJpb2QgbXVzdCBiZQpzcGVjaWZpZWQ7IG90aGVyd2lzZSwgYW4gZXJyb3IgaXMgcmV0dXJuZWQuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aTo2O086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo5OiJvcHRfcGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjM5MDoic3RyaW5nIGZpbHRlciBSZXF1aXJlZC4gQSBtb25pdG9yaW5nIGZpbHRlcgooaHR0cHM6Ly9jbG91ZC5nb29nbGUuY29tL21vbml0b3JpbmcvYXBpL3YzL2ZpbHRlcnMpIHRoYXQgc3BlY2lmaWVzIHdoaWNoCnRpbWUgc2VyaWVzIHNob3VsZCBiZSByZXR1cm5lZC4gVGhlIGZpbHRlciBtdXN0IHNwZWNpZnkgYSBzaW5nbGUgbWV0cmljIHR5cGUsCmFuZCBjYW4gYWRkaXRpb25hbGx5IHNwZWNpZnkgbWV0cmljIGxhYmVscyBhbmQgb3RoZXIgaW5mb3JtYXRpb24uIEZvcgpleGFtcGxlOiBtZXRyaWMudHlwZSA9ICJjb21wdXRlLmdvb2dsZWFwaXMuY29tL2luc3RhbmNlL2NwdS91c2FnZV90aW1lIiBBTkQKbWV0cmljLmxhYmVscy5pbnN0YW5jZV9uYW1lID0gIm15LWluc3RhbmNlLW5hbWUiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aTo3O086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo5OiJvcHRfcGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjYzOiJzdHJpbmcgaW50ZXJ2YWwuZW5kVGltZSBSZXF1aXJlZC4gVGhlIGVuZCBvZiB0aGUgdGltZSBpbnRlcnZhbC4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjg7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTc3OiJzdHJpbmcgaW50ZXJ2YWwuc3RhcnRUaW1lIE9wdGlvbmFsLiBUaGUgYmVnaW5uaW5nIG9mIHRoZSB0aW1lCmludGVydmFsLiBUaGUgZGVmYXVsdCB2YWx1ZSBmb3IgdGhlIHN0YXJ0IHRpbWUgaXMgdGhlIGVuZCB0aW1lLiBUaGUgc3RhcnQKdGltZSBtdXN0IG5vdCBiZSBsYXRlciB0aGFuIHRoZSBlbmQgdGltZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjk7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTQ4OiJzdHJpbmcgb3JkZXJCeSBVbnN1cHBvcnRlZDogbXVzdCBiZSBsZWZ0IGJsYW5rLiBUaGUgcG9pbnRzIGluIGVhY2gKdGltZSBzZXJpZXMgYXJlIGN1cnJlbnRseSByZXR1cm5lZCBpbiByZXZlcnNlIHRpbWUgb3JkZXIgKG1vc3QgcmVjZW50IHRvCm9sZGVzdCkuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxMDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6OToib3B0X3BhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czozMjQ6ImludCBwYWdlU2l6ZSBBIHBvc2l0aXZlIG51bWJlciB0aGF0IGlzIHRoZSBtYXhpbXVtIG51bWJlciBvZgpyZXN1bHRzIHRvIHJldHVybi4gSWYgcGFnZV9zaXplIGlzIGVtcHR5IG9yIG1vcmUgdGhhbiAxMDAsMDAwIHJlc3VsdHMsIHRoZQplZmZlY3RpdmUgcGFnZV9zaXplIGlzIDEwMCwwMDAgcmVzdWx0cy4gSWYgdmlldyBpcyBzZXQgdG8gRlVMTCwgdGhpcyBpcyB0aGUKbWF4aW11bSBudW1iZXIgb2YgUG9pbnRzIHJldHVybmVkLiBJZiB2aWV3IGlzIHNldCB0byBIRUFERVJTLCB0aGlzIGlzIHRoZQptYXhpbXVtIG51bWJlciBvZiBUaW1lU2VyaWVzIHJldHVybmVkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MjI3OiJzdHJpbmcgcGFnZVRva2VuIElmIHRoaXMgZmllbGQgaXMgbm90IGVtcHR5IHRoZW4gaXQgbXVzdCBjb250YWluCnRoZSBuZXh0UGFnZVRva2VuIHZhbHVlIHJldHVybmVkIGJ5IGEgcHJldmlvdXMgY2FsbCB0byB0aGlzIG1ldGhvZC4gVXNpbmcKdGhpcyBmaWVsZCBjYXVzZXMgdGhlIG1ldGhvZCB0byByZXR1cm4gYWRkaXRpb25hbCByZXN1bHRzIGZyb20gdGhlIHByZXZpb3VzCm1ldGhvZCBjYWxsLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTI7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NjQ4OiJzdHJpbmcgc2Vjb25kYXJ5QWdncmVnYXRpb24uYWxpZ25tZW50UGVyaW9kIFRoZSBhbGlnbm1lbnRfcGVyaW9kCnNwZWNpZmllcyBhIHRpbWUgaW50ZXJ2YWwsIGluIHNlY29uZHMsIHRoYXQgaXMgdXNlZCB0byBkaXZpZGUgdGhlIGRhdGEgaW4gYWxsCnRoZSB0aW1lIHNlcmllcyBpbnRvIGNvbnNpc3RlbnQgYmxvY2tzIG9mIHRpbWUuIFRoaXMgd2lsbCBiZSBkb25lIGJlZm9yZSB0aGUKcGVyLXNlcmllcyBhbGlnbmVyIGNhbiBiZSBhcHBsaWVkIHRvIHRoZSBkYXRhLlRoZSB2YWx1ZSBtdXN0IGJlIGF0IGxlYXN0IDYwCnNlY29uZHMuIElmIGEgcGVyLXNlcmllcyBhbGlnbmVyIG90aGVyIHRoYW4gQUxJR05fTk9ORSBpcyBzcGVjaWZpZWQsIHRoaXMKZmllbGQgaXMgcmVxdWlyZWQgb3IgYW4gZXJyb3IgaXMgcmV0dXJuZWQuIElmIG5vIHBlci1zZXJpZXMgYWxpZ25lciBpcwpzcGVjaWZpZWQsIG9yIHRoZSBhbGlnbmVyIEFMSUdOX05PTkUgaXMgc3BlY2lmaWVkLCB0aGVuIHRoaXMgZmllbGQgaXMKaWdub3JlZC5UaGUgbWF4aW11bSB2YWx1ZSBvZiB0aGUgYWxpZ25tZW50X3BlcmlvZCBpcyAxMDQgd2Vla3MgKDIgeWVhcnMpIGZvcgpjaGFydHMsIGFuZCA5MCwwMDAgc2Vjb25kcyAoMjUgaG91cnMpIGZvciBhbGVydGluZyBwb2xpY2llcy4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjEzO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo5OiJvcHRfcGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjgyMDoic3RyaW5nIHNlY29uZGFyeUFnZ3JlZ2F0aW9uLmNyb3NzU2VyaWVzUmVkdWNlciBUaGUgcmVkdWN0aW9uCm9wZXJhdGlvbiB0byBiZSB1c2VkIHRvIGNvbWJpbmUgdGltZSBzZXJpZXMgaW50byBhIHNpbmdsZSB0aW1lIHNlcmllcywgd2hlcmUKdGhlIHZhbHVlIG9mIGVhY2ggZGF0YSBwb2ludCBpbiB0aGUgcmVzdWx0aW5nIHNlcmllcyBpcyBhIGZ1bmN0aW9uIG9mIGFsbCB0aGUKYWxyZWFkeSBhbGlnbmVkIHZhbHVlcyBpbiB0aGUgaW5wdXQgdGltZSBzZXJpZXMuTm90IGFsbCByZWR1Y2VyIG9wZXJhdGlvbnMKY2FuIGJlIGFwcGxpZWQgdG8gYWxsIHRpbWUgc2VyaWVzLiBUaGUgdmFsaWQgY2hvaWNlcyBkZXBlbmQgb24gdGhlCm1ldHJpY19raW5kIGFuZCB0aGUgdmFsdWVfdHlwZSBvZiB0aGUgb3JpZ2luYWwgdGltZSBzZXJpZXMuIFJlZHVjdGlvbiBjYW4KeWllbGQgYSB0aW1lIHNlcmllcyB3aXRoIGEgZGlmZmVyZW50IG1ldHJpY19raW5kIG9yIHZhbHVlX3R5cGUgdGhhbiB0aGUgaW5wdXQKdGltZSBzZXJpZXMuVGltZSBzZXJpZXMgZGF0YSBtdXN0IGZpcnN0IGJlIGFsaWduZWQgKHNlZSBwZXJfc2VyaWVzX2FsaWduZXIpCmluIG9yZGVyIHRvIHBlcmZvcm0gY3Jvc3MtdGltZSBzZXJpZXMgcmVkdWN0aW9uLiBJZiBjcm9zc19zZXJpZXNfcmVkdWNlciBpcwpzcGVjaWZpZWQsIHRoZW4gcGVyX3Nlcmllc19hbGlnbmVyIG11c3QgYmUgc3BlY2lmaWVkLCBhbmQgbXVzdCBub3QgYmUKQUxJR05fTk9ORS4gQW4gYWxpZ25tZW50X3BlcmlvZCBtdXN0IGFsc28gYmUgc3BlY2lmaWVkOyBvdGhlcndpc2UsIGFuIGVycm9yCmlzIHJldHVybmVkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTQ7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6ODUwOiJzdHJpbmcgc2Vjb25kYXJ5QWdncmVnYXRpb24uZ3JvdXBCeUZpZWxkcyBUaGUgc2V0IG9mIGZpZWxkcyB0bwpwcmVzZXJ2ZSB3aGVuIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIHNwZWNpZmllZC4gVGhlIGdyb3VwX2J5X2ZpZWxkcwpkZXRlcm1pbmUgaG93IHRoZSB0aW1lIHNlcmllcyBhcmUgcGFydGl0aW9uZWQgaW50byBzdWJzZXRzIHByaW9yIHRvIGFwcGx5aW5nCnRoZSBhZ2dyZWdhdGlvbiBvcGVyYXRpb24uIEVhY2ggc3Vic2V0IGNvbnRhaW5zIHRpbWUgc2VyaWVzIHRoYXQgaGF2ZSB0aGUKc2FtZSB2YWx1ZSBmb3IgZWFjaCBvZiB0aGUgZ3JvdXBpbmcgZmllbGRzLiBFYWNoIGluZGl2aWR1YWwgdGltZSBzZXJpZXMgaXMgYQptZW1iZXIgb2YgZXhhY3RseSBvbmUgc3Vic2V0LiBUaGUgY3Jvc3Nfc2VyaWVzX3JlZHVjZXIgaXMgYXBwbGllZCB0byBlYWNoCnN1YnNldCBvZiB0aW1lIHNlcmllcy4gSXQgaXMgbm90IHBvc3NpYmxlIHRvIHJlZHVjZSBhY3Jvc3MgZGlmZmVyZW50IHJlc291cmNlCnR5cGVzLCBzbyB0aGlzIGZpZWxkIGltcGxpY2l0bHkgY29udGFpbnMgcmVzb3VyY2UudHlwZS4gRmllbGRzIG5vdCBzcGVjaWZpZWQKaW4gZ3JvdXBfYnlfZmllbGRzIGFyZSBhZ2dyZWdhdGVkIGF3YXkuIElmIGdyb3VwX2J5X2ZpZWxkcyBpcyBub3Qgc3BlY2lmaWVkCmFuZCBhbGwgdGhlIHRpbWUgc2VyaWVzIGhhdmUgdGhlIHNhbWUgcmVzb3VyY2UgdHlwZSwgdGhlbiB0aGUgdGltZSBzZXJpZXMgYXJlCmFnZ3JlZ2F0ZWQgaW50byBhIHNpbmdsZSBvdXRwdXQgdGltZSBzZXJpZXMuIElmIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIG5vdApkZWZpbmVkLCB0aGlzIGZpZWxkIGlzIGlnbm9yZWQuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxNTtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6OToib3B0X3BhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo4NjE6InN0cmluZyBzZWNvbmRhcnlBZ2dyZWdhdGlvbi5wZXJTZXJpZXNBbGlnbmVyIEFuIEFsaWduZXIgZGVzY3JpYmVzCmhvdyB0byBicmluZyB0aGUgZGF0YSBwb2ludHMgaW4gYSBzaW5nbGUgdGltZSBzZXJpZXMgaW50byB0ZW1wb3JhbCBhbGlnbm1lbnQuCkV4Y2VwdCBmb3IgQUxJR05fTk9ORSwgYWxsIGFsaWdubWVudHMgY2F1c2UgYWxsIHRoZSBkYXRhIHBvaW50cyBpbiBhbgphbGlnbm1lbnRfcGVyaW9kIHRvIGJlIG1hdGhlbWF0aWNhbGx5IGdyb3VwZWQgdG9nZXRoZXIsIHJlc3VsdGluZyBpbiBhIHNpbmdsZQpkYXRhIHBvaW50IGZvciBlYWNoIGFsaWdubWVudF9wZXJpb2Qgd2l0aCBlbmQgdGltZXN0YW1wIGF0IHRoZSBlbmQgb2YgdGhlCnBlcmlvZC5Ob3QgYWxsIGFsaWdubWVudCBvcGVyYXRpb25zIG1heSBiZSBhcHBsaWVkIHRvIGFsbCB0aW1lIHNlcmllcy4gVGhlCnZhbGlkIGNob2ljZXMgZGVwZW5kIG9uIHRoZSBtZXRyaWNfa2luZCBhbmQgdmFsdWVfdHlwZSBvZiB0aGUgb3JpZ2luYWwgdGltZQpzZXJpZXMuIEFsaWdubWVudCBjYW4gY2hhbmdlIHRoZSBtZXRyaWNfa2luZCBvciB0aGUgdmFsdWVfdHlwZSBvZiB0aGUgdGltZQpzZXJpZXMuVGltZSBzZXJpZXMgZGF0YSBtdXN0IGJlIGFsaWduZWQgaW4gb3JkZXIgdG8gcGVyZm9ybSBjcm9zcy10aW1lIHNlcmllcwpyZWR1Y3Rpb24uIElmIGNyb3NzX3Nlcmllc19yZWR1Y2VyIGlzIHNwZWNpZmllZCwgdGhlbiBwZXJfc2VyaWVzX2FsaWduZXIgbXVzdApiZSBzcGVjaWZpZWQgYW5kIG5vdCBlcXVhbCB0byBBTElHTl9OT05FIGFuZCBhbGlnbm1lbnRfcGVyaW9kIG11c3QgYmUKc3BlY2lmaWVkOyBvdGhlcndpc2UsIGFuIGVycm9yIGlzIHJldHVybmVkLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTY7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjk6Im9wdF9wYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6ODQ6InN0cmluZyB2aWV3IFJlcXVpcmVkLiBTcGVjaWZpZXMgd2hpY2ggaW5mb3JtYXRpb24gaXMgcmV0dXJuZWQKYWJvdXQgdGhlIHRpbWUgc2VyaWVzLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MTc7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDk6IlxHb29nbGVfU2VydmljZV9Nb25pdG9yaW5nX0xpc3RUaW1lU2VyaWVzUmVzcG9uc2UiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0ODoiR29vZ2xlX1NlcnZpY2VfTW9uaXRvcmluZ19MaXN0VGltZVNlcmllc1Jlc3BvbnNlIjt9fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3ODoiXEdvb2dsZV9TZXJ2aWNlX01vbml0b3JpbmdfUmVzb3VyY2VfRm9sZGVyc1RpbWVTZXJpZXM6Omxpc3RGb2xkZXJzVGltZVNlcmllcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjE6Imxpc3RGb2xkZXJzVGltZVNlcmllcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJuYW1lIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6OToib3B0UGFyYW1zIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czo3OiJhcnJheSgpIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTUyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";